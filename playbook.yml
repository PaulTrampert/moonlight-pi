---
- name: Software Installation
  hosts: all
  become: true
  vars:
    keyring_dir: "/usr/share/keyrings"
    moonlight_keyring_url: "https://dl.cloudsmith.io/public/moonlight-game-streaming/moonlight-qt/gpg.2F6AE14E1C660D44.key"
    moonlight_armored_keyring: "{{ keyring_dir }}/moonlight-game-streaming-moonlight-qt-archive-keyring"
    moonlight_keyring: "{{ keyring_dir }}/moonlight-game-streaming-moonlight-qt-archive-keyring.gpg"
    moonlight_repo_url: "https://dl.cloudsmith.io/public/moonlight-game-streaming/moonlight-qt/config.deb.txt?distro={{ ansible_lsb.id }}&codename={{ ansible_lsb.codename }}&version={{ ansible_lsb.release }}&arch={{ ansible_architecture }}"
    moonlight_repo_dest: "/etc/apt/sources.list.d/moonlight-game-streaming-moonlight-qt.list"
  tasks:
    - name: Secure sudo
      ansible.builtin.file:
        path: /etc/sudoers.d/010_pi-nopasswd
        state: absent

    - name: System Update
      ansible.builtin.apt:
        state: latest
        update_cache: true

    - name: Install Prereqs
      ansible.builtin.apt:
        name:
          - gnupg
          - apt-transport-https
          - ca-certificates

    - name: Get Moonlight gpg key
      ansible.builtin.get_url:
        url: "{{ moonlight_keyring_url }}"
        dest: "{{ moonlight_armored_keyring }}"
        mode: '0644'
      register: moonlight_key

    - name: Dearmor keyring
      ansible.builtin.command: 
        cmd: "gpg --dearmor {{ moonlight_armored_keyring }}"
      when: moonlight_key is changed

    - name: Set keyring permissions
      ansible.builtin.file:
        path: "{{ moonlight_keyring }}"
        state: file
        mode: '0644'
      when: moonlight_key is changed

    - name: Install Moonlight Repo
      ansible.builtin.get_url:
        url: "{{ moonlight_repo_url }}"
        dest: "{{ moonlight_repo_dest }}"
        mode: '0644'
    
    - name: Install Software
      ansible.builtin.apt:
        name:
          - moonlight-qt
          - pulseaudio
        update_cache: true

    - name: Run raspi-config settings
      ansible.builtin.command: "raspi-config nonint {{ item }}"
      with_items:
        - do_boot_behaviour B2 # Boot to console, autologin
        - do_audioconf 1 # Audio set to pulseaudio

    - name: Reboot
      ansible.builtin.reboot:

- name: User Configuration
  hosts: all
  become: false
  tasks:
    - name: Create moonlight user service
      ansible.builtin.copy:
        dest: "{{ ansible_env.HOME }}/.config/systemd/user/"
        src: files/moonlight.service

    - name: Enable moonlight user service 
      ansible.builtin.systemd_service:
        name: moonlight
        enabled: true
        state: started
        scope: user